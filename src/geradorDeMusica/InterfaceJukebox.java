/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package geradorDeMusica;

import javax.swing.*;

public class InterfaceJukebox extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public InterfaceJukebox() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backColor = new javax.swing.JPanel();
        abas = new javax.swing.JTabbedPane();
        abaConversao = new javax.swing.JPanel();
        textoDigite = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        caixaTexto = new javax.swing.JTextArea();
        botaoConverter = new javax.swing.JButton();
        textoConfiguracoes = new javax.swing.JLabel();
        textoInstrumento = new javax.swing.JLabel();
        textoBPM = new javax.swing.JLabel();
        seletorInstrumento = new javax.swing.JComboBox<>();
        seletorBPM = new javax.swing.JComboBox<>();
        textoDownload = new javax.swing.JLabel();
        botaoDownload = new javax.swing.JButton();
        botaoSelecionar = new javax.swing.JButton();
        textoSelecione = new javax.swing.JLabel();
        caixaNomeArquivo = new javax.swing.JTextField();
        textoNomeArquivo = new javax.swing.JLabel();
        textoMID = new javax.swing.JLabel();
        textoVolume = new javax.swing.JLabel();
        textoOitava = new javax.swing.JLabel();
        seletorVolume = new javax.swing.JComboBox<>();
        seletorOitava = new javax.swing.JComboBox<>();
        abaHelp = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabMapeamento = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TEXTO MUSICAL ♪ - Converte seu texto em uma música!");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        backColor.setBackground(new java.awt.Color(174, 179, 197));

        abas.setBackground(new java.awt.Color(0, 0, 0));
        abas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        abaConversao.setBackground(new java.awt.Color(102, 102, 102));
        abaConversao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        textoDigite.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoDigite.setForeground(new java.awt.Color(204, 204, 204));
        textoDigite.setText("Digite aqui o texto a ser convertido:");

        caixaTexto.setBackground(new java.awt.Color(174, 179, 197));
        caixaTexto.setColumns(20);
        caixaTexto.setRows(5);
        caixaTexto.setBorder(null);
        caixaTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(caixaTexto);

        botaoConverter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoConverter.setText("Converter");
        botaoConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConverterActionPerformed(evt);
            }
        });

        textoConfiguracoes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoConfiguracoes.setForeground(new java.awt.Color(204, 204, 204));
        textoConfiguracoes.setText("Configurações iniciais:");

        textoInstrumento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textoInstrumento.setForeground(new java.awt.Color(204, 204, 204));
        textoInstrumento.setText("Instrumento:");

        textoBPM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textoBPM.setForeground(new java.awt.Color(204, 204, 204));
        textoBPM.setText("BPM:");

        seletorInstrumento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        seletorInstrumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Violão", "Guitarra", "Violino", "Agogô", "Orquestra", "Flauta de Pã", "Órgão", "Sinos", "Cravo" }));

        seletorBPM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        seletorBPM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "60", "80", "100", "120", "140", "160", "180", "210" }));
        seletorBPM.setSelectedIndex(2);

        textoDownload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoDownload.setForeground(new java.awt.Color(204, 204, 204));
        textoDownload.setText("Faça o download da sua música:");

        botaoDownload.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoDownload.setText("Download");
        botaoDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDownloadActionPerformed(evt);
            }
        });

        botaoSelecionar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoSelecionar.setText("Selecionar");
        botaoSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarActionPerformed(evt);
            }
        });

        textoSelecione.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textoSelecione.setForeground(new java.awt.Color(204, 204, 204));
        textoSelecione.setText("Ou selecione o arquivo a ser convertido:");

        caixaNomeArquivo.setBackground(new java.awt.Color(174, 179, 197));

        textoNomeArquivo.setForeground(new java.awt.Color(204, 204, 204));
        textoNomeArquivo.setText("Nome do arquivo:");

        textoMID.setForeground(new java.awt.Color(204, 204, 204));
        textoMID.setText(".MID");

        textoVolume.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textoVolume.setForeground(new java.awt.Color(204, 204, 204));
        textoVolume.setText("Volume:");

        textoOitava.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textoOitava.setForeground(new java.awt.Color(204, 204, 204));
        textoOitava.setText("Oitava:");

        seletorVolume.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        seletorVolume.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        seletorVolume.setSelectedIndex(2);

        seletorOitava.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        seletorOitava.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        seletorOitava.setSelectedIndex(5);

        javax.swing.GroupLayout abaConversaoLayout = new javax.swing.GroupLayout(abaConversao);
        abaConversao.setLayout(abaConversaoLayout);
        abaConversaoLayout.setHorizontalGroup(
            abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, abaConversaoLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(textoInstrumento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seletorInstrumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoOitava)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seletorOitava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoBPM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seletorBPM, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoVolume)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seletorVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(abaConversaoLayout.createSequentialGroup()
                .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaConversaoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoDigite)
                            .addComponent(textoConfiguracoes)
                            .addComponent(textoSelecione)))
                    .addGroup(abaConversaoLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(abaConversaoLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(abaConversaoLayout.createSequentialGroup()
                                .addComponent(botaoSelecionar)
                                .addGap(157, 157, 157)
                                .addComponent(botaoConverter))
                            .addGroup(abaConversaoLayout.createSequentialGroup()
                                .addComponent(textoNomeArquivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(caixaNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textoMID)
                                .addGap(60, 60, 60)
                                .addComponent(botaoDownload))))
                    .addGroup(abaConversaoLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(textoDownload)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        abaConversaoLayout.setVerticalGroup(
            abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaConversaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoConfiguracoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoInstrumento)
                    .addComponent(textoOitava)
                    .addComponent(seletorOitava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoBPM)
                    .addComponent(seletorBPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoVolume)
                    .addComponent(seletorVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seletorInstrumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(textoDigite)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(textoSelecione)
                .addGap(18, 18, 18)
                .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSelecionar)
                    .addComponent(botaoConverter))
                .addGap(30, 30, 30)
                .addComponent(textoDownload)
                .addGap(18, 18, 18)
                .addGroup(abaConversaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoDownload)
                    .addComponent(caixaNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoNomeArquivo)
                    .addComponent(textoMID))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        abas.addTab("Conversão", abaConversao);

        abaHelp.setBackground(new java.awt.Color(102, 102, 102));

        tabMapeamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A", "Nota Lá"},
                {"B", "Nota Si"},
                {"C", "Nota Dó"},
                {"D", "Nota Ré"},
                {"E", "Nota Mi"},
                {"F", "Nota Fá"},
                {"G", "Nota Sol"},
                {"@", "Nota aleatória"},
                {"Espaço", "Dobra o volume (se não puder, volta ao volume inicial)"},
                {"?", "Aumenta uma oitava (se não puder, volta à oitava inicial)"},
                {"%", "Diminui uma oitava (se não puder, volta à oitava inicial)"},
                {"+", "Aumenta BPM em 50 unidades (máx 210)"},
                {"-", "Diminui BPM em 50 unidades (mín 60)"},
                {"!", "Troca instrumento para Agogô"},
                {"#", "Troca instrumento para Guitarra"},
                {"$", "Troca instrumento para Orquestra"},
                {"; (ponto e vírgula)", "Troca instrumento para Flauta de Pã"},
                {", (vírgula)", "Troca instrumento para Órgão"},
                {"Quebra de linha", "Troca instrumento para Sinos"},
                {"Vogais (I,i,O,o,U,u)", "Troca instrumento para Cravo"},
                {"Número", "Trocar instrumento para instrumento ATUAL + valor do dígito"},
                {"ELSE", "Se caractere anterior era NOTA (A até G), repete nota"},
                {null, "Caso contrário, pausa "}
            },
            new String [] {
                "Texto", "Ação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabMapeamento.setShowGrid(true);
        jScrollPane2.setViewportView(tabMapeamento);
        if (tabMapeamento.getColumnModel().getColumnCount() > 0) {
            tabMapeamento.getColumnModel().getColumn(0).setResizable(false);
            tabMapeamento.getColumnModel().getColumn(0).setPreferredWidth(10);
            tabMapeamento.getColumnModel().getColumn(1).setResizable(false);
            tabMapeamento.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        javax.swing.GroupLayout abaHelpLayout = new javax.swing.GroupLayout(abaHelp);
        abaHelp.setLayout(abaHelpLayout);
        abaHelpLayout.setHorizontalGroup(
            abaHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaHelpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
        );
        abaHelpLayout.setVerticalGroup(
            abaHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaHelpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        abas.addTab("Help", abaHelp);

        javax.swing.GroupLayout backColorLayout = new javax.swing.GroupLayout(backColor);
        backColor.setLayout(backColorLayout);
        backColorLayout.setHorizontalGroup(
            backColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(abas)
        );
        backColorLayout.setVerticalGroup(
            backColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(abas, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int retornaCodigoInstrumento(String instrumento) {
        return switch (instrumento) {
            case "Piano" -> ConversorDeTexto.CODIGO_PIANO;
            case "Violão" -> ConversorDeTexto.CODIGO_VIOLAO;
            case "Guitarra" -> ConversorDeTexto.CODIGO_GUITARRA;
            case "Violino" -> ConversorDeTexto.CODIGO_VIOLIN;
            case "Agogô" -> ConversorDeTexto.CODIGO_AGOGO;
            case "Orquestra" -> ConversorDeTexto.CODIGO_ORQUESTRA;
            case "Flauta de Pã" -> ConversorDeTexto.CODIGO_PAN_FLUTE;
            case "Órgão" -> ConversorDeTexto.CODIGO_CHURCH_ORGAN;
            case "Sinos" -> ConversorDeTexto.CODIGO_TUBULAR_BELLS;
            default -> ConversorDeTexto.CODIGO_HARPSICHORD;
        };
    }
     
    private int decodificaVolume(int volume) {
        return switch (volume) {
            case 1 -> 31;
            case 2 -> 55;
            case 3 -> 79;
            case 4 -> 103;
            default -> 127;
        };
    }
    
    private String converteTextoParaMusica(){
        
        StaccatoString staccato = new StaccatoString();
            
        staccato.defineOitava(Integer.parseInt(seletorOitava.getSelectedItem().toString()));
        staccato.defineInstrumento(retornaCodigoInstrumento(seletorInstrumento.getSelectedItem().toString()));
        staccato.defineVolume(decodificaVolume(Integer.parseInt(seletorVolume.getSelectedItem().toString())));
        staccato.defineBPM(Integer.parseInt(seletorBPM.getSelectedItem().toString()));
            
        ConversorDeTexto conversor = new ConversorDeTexto(staccato);
        conversor.defineTextoInput(caixaTexto.getText());
            
        return conversor.geraTextoParametrizado();
    }
    
    private void botaoConverterActionPerformed(java.awt.event.ActionEvent evt)  {//GEN-FIRST:event_botaoConverterActionPerformed

        if(caixaTexto.getText().isEmpty())
            JOptionPane.showMessageDialog(rootPane, "Insira o texto a ser convertido!", "Caixa de texto vazia", JOptionPane.INFORMATION_MESSAGE);
        else {
            
            String textoMusical = converteTextoParaMusica();
            TocadorDeMusica jukebox = new TocadorDeMusica();
            jukebox.defineStaccato(textoMusical);
            jukebox.tocaMusica();
        }

    }//GEN-LAST:event_botaoConverterActionPerformed

    private void botaoSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarActionPerformed
        
        String conteudo;
        LeitorDeArquivos leitor = new LeitorDeArquivos();
        conteudo = leitor.retornaConteudo();
        if (conteudo.equals("-1"))
            JOptionPane.showMessageDialog(rootPane, "Selecione um arquivo txt", "Nome do arquivo em branco", JOptionPane.INFORMATION_MESSAGE);
        else
            caixaTexto.setText(conteudo);
    }//GEN-LAST:event_botaoSelecionarActionPerformed

    private void botaoDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDownloadActionPerformed
       
        if(caixaTexto.getText().isEmpty())
            JOptionPane.showMessageDialog(rootPane, "Insira o texto a ser convertido!", "Caixa de texto vazia", JOptionPane.INFORMATION_MESSAGE);
        else {
           
            if (caixaNomeArquivo.getText().isEmpty())
                JOptionPane.showMessageDialog(rootPane, "Insira o nome do arquivo!", "Nome do arquivo em branco", JOptionPane.INFORMATION_MESSAGE);

            else {
                String textoMusical = converteTextoParaMusica();
                GravadorDeMusica recorder = new GravadorDeMusica();
                recorder.defineNomeArquivo(caixaNomeArquivo.getText() + ".mid");
                recorder.gravaMusica(textoMusical);

                JOptionPane.showMessageDialog(rootPane, "Download concluido!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_botaoDownloadActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceJukebox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceJukebox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceJukebox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceJukebox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceJukebox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abaConversao;
    private javax.swing.JPanel abaHelp;
    private javax.swing.JTabbedPane abas;
    private javax.swing.JPanel backColor;
    private javax.swing.JButton botaoConverter;
    private javax.swing.JButton botaoDownload;
    private javax.swing.JButton botaoSelecionar;
    private javax.swing.JTextField caixaNomeArquivo;
    private javax.swing.JTextArea caixaTexto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> seletorBPM;
    private javax.swing.JComboBox<String> seletorInstrumento;
    private javax.swing.JComboBox<String> seletorOitava;
    private javax.swing.JComboBox<String> seletorVolume;
    private javax.swing.JTable tabMapeamento;
    private javax.swing.JLabel textoBPM;
    private javax.swing.JLabel textoConfiguracoes;
    private javax.swing.JLabel textoDigite;
    private javax.swing.JLabel textoDownload;
    private javax.swing.JLabel textoInstrumento;
    private javax.swing.JLabel textoMID;
    private javax.swing.JLabel textoNomeArquivo;
    private javax.swing.JLabel textoOitava;
    private javax.swing.JLabel textoSelecione;
    private javax.swing.JLabel textoVolume;
    // End of variables declaration//GEN-END:variables
}
